#!/bin/bash
# git_push_features.sh - Pousse la structure feature-first sur Git

set -e  # Arr√™ter en cas d'erreur

echo "üöÄ Pr√©paration du commit pour la migration feature-first..."

# V√©rifier s'il y a des changements √† commiter
if [ -z "$(git status --porcelain)" ]; then
  echo "‚ö†Ô∏è Aucun changement √† commiter"
  exit 0
fi

# Cr√©er une nouvelle branche pour la migration
BRANCH_NAME="refactor/feature-first-architecture-$(date +%Y%m%d)"
git checkout -b $BRANCH_NAME

# Ajouter tous les fichiers
git add .

# Commit avec un message d√©taill√©
git commit -m "Refactoring: Migration compl√®te vers l'architecture feature-first

- R√©organisation de la structure du projet par domaines m√©tier
- Migration des composants, services, hooks et types par feature
- Uniformisation des imports avec les alias (@features, @types, etc.)
- Cr√©ation de pages de redirection pour pr√©server la compatibilit√©
- Am√©lioration de la s√©paration des pr√©occupations et de la maintenabilit√©

Cette migration facilitera l'√©volution du projet et l'int√©gration de nouvelles fonctionnalit√©s."

# Pousser la branche
echo "üîÑ Envoi des changements sur la branche $BRANCH_NAME..."
git push origin $BRANCH_NAME

echo "‚úÖ Migration pouss√©e avec succ√®s!"
echo ""
echo "Prochaines √©tapes:"
echo "1. Cr√©er une Pull Request sur GitHub depuis la branche $BRANCH_NAME"
echo "2. Faire r√©viser les changements par l'√©quipe"
echo "3. Tester l'application pour s'assurer que tout fonctionne"
echo "4. Merger la PR dans la branche principale"